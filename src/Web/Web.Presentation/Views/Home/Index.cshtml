@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">Memory usage:</div>
<div class="text-center">
    @ViewBag.TotalAllocatedMemory / @ViewBag.TotalAvailableMemory GB
</div>


<div class="card">
  <div class="card-header">
    Memory
  </div>
  <div class="card-body text-center">
    <canvas class="my-4 h-25" id="ram_usage" style="width:100%;max-width:550px"></canvas>
  </div>
</div>

<hr/>

<div class="card">
  <div class="card-header">
    Memory used by Java: @ViewBag.JavaMem Gb
  </div>
  <div class="card-body text-center">
    <canvas class="my-4 h-25" id="chart" style="width:100%;max-width:350px"></canvas>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

let myChart = new Chart("chart", {
  type: "pie",
  data: {
    labels: ['RAM used by other processes', 'RAM used by Java', 'Free Memory'],
    datasets: [{
      label: 'Gb of Used RAM',
      data: [@ViewBag.RestOfMemChart, @ViewBag.JavaMemChart, @ViewBag.FreeMemory],
      borderWidth: 1,
      backgroundColor: ['#219ebc', '#fb8500', '#023047'],
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Memory used by Java over Max RAM Memory and Free Memory'
      }
    }
  },
});

@{
  var _labelsCount = ViewBag.RamCount;
}

const logNumbers = (count) => {
  const data = [];

  for (let i = 0; i < count; ++i) {
    data.push(i);
  }

  return data;
};

let ram_usage = new Chart("ram_usage", {
 type: 'line',
 data: {
   labels: logNumbers(60),
   datasets: [
     {
       label: 'Ram usage %',
       data: @ViewBag.RamData,
       borderColor: '#023047',
       backgroundColor: '#023047',
     }
   ]
 },
 options: {
   responsive: true,
   plugins: {
     tooltip: {
       mode: 'index',
       intersect: false
     },
     title: {
       display: true,
       text: 'Memory usage'
     }
   },
   hover: {
     mode: 'index',
     intersec: false
   },
   scales: {
     x: {
       title: {
         display: true,
         text: 'Time (10s)'
       }
     },
     y: {
       title: {
         display: true,
         text: '%'
       },
       min: 0,
       max: 100,
       ticks: {
         // forces step size to be 50 units
         stepSize: 50
       }
     }
   }
 },
});

</script>


<style>
  canvas {
      display: block;
      margin: 0 auto;
  }
</style>